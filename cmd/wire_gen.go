// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"deviceback/v3/internal/data"
	"deviceback/v3/internal/handler"
	"deviceback/v3/internal/router"
	"deviceback/v3/internal/service"
	"deviceback/v3/pkg/config"
	"deviceback/v3/pkg/log"
	"deviceback/v3/pkg/server"
)

// Injectors from wire.go:

func wireApp(configConfig *config.Config, logger log.Logger) (*App, func(), error) {
	engine := server.NewEngine()
	wsRouter := router.NewWsRouter(engine, logger)
	dataData, cleanup, err := data.NewData(logger, configConfig)
	if err != nil {
		return nil, nil, err
	}
	testRepo := data.NewTestRepo(dataData, logger)
	testService := service.NewTestService(testRepo)
	testHandler := handler.NewTestHandler(testService, logger)
	httpRouter := router.NewHttpRouter(engine, testHandler)
	serverServer := server.NewServer(configConfig, engine, wsRouter, httpRouter)
	app := newApp(logger, serverServer)
	return app, func() {
		cleanup()
	}, nil
}
